{
  "{\"sourceRoot\":\"/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint\",\"filename\":\"/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint",
      "filename": "/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint/src/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\n\nvar urlLogger = function urlLogger(req, res, next) {\n  console.log(\"Path: \".concat(req.path));\n  next();\n};\n\nvar timeLogger = function timeLogger(req, res, next) {\n  var today = new Date();\n  console.log(\"Time: \".concat(today.getFullYear(), \".\").concat(today.getMonth(), \".\").concat(today.getDate()));\n  next();\n};\n\nvar securityLogger = function securityLogger(req, res, next) {\n  var protocol = req.protocol; //console.log(protocol);\n\n  if (protocol === \"https\") {\n    console.log(\"Secure\");\n  } else {\n    console.log(\"Insecure\");\n  }\n\n  next();\n};\n\nvar protectorMid = function protectorMid(req, res, next) {\n  var url = req.url;\n\n  if (url === \"/protected\") {\n    return res.send(\"<h1>Cannot Access</h1>\");\n  }\n\n  next();\n}; //app.use(urlLogger);\n//app.use(timeLogger);\n//app.use(securityLogger);\n//app.use(protectorMid);\n\n\nvar home = function home(req, res) {\n  return res.send(\"<h1>Home</h1>\");\n};\n\nvar protect = function protect(req, res) {\n  return res.send(\"<h1>Protected</h1>\");\n};\n\napp.use(urlLogger, timeLogger, securityLogger, protectorMid);\napp.get(\"/\", home);\napp.get(\"/protected\", protect); // Codesandbox gives us a PORT :)\n//app.listen(process.env.PORT, () => `Listening!✅`);\n\nvar PORT = 4500;\napp.listen(PORT, function () {\n  return \"Listening!\\u2705\";\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1cmxMb2dnZXIiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsInBhdGgiLCJ0aW1lTG9nZ2VyIiwidG9kYXkiLCJEYXRlIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJzZWN1cml0eUxvZ2dlciIsInByb3RvY29sIiwicHJvdGVjdG9yTWlkIiwidXJsIiwic2VuZCIsImhvbWUiLCJwcm90ZWN0IiwidXNlIiwiZ2V0IiwiUE9SVCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjs7QUFFQSxJQUFNQyxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUNwQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLGlCQUFxQkosR0FBRyxDQUFDSyxJQUF6QjtBQUNBSCxFQUFBQSxJQUFJO0FBQ0wsQ0FIRDs7QUFLQSxJQUFNSSxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFDTixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUNyQyxNQUFNSyxLQUFLLEdBQUcsSUFBSUMsSUFBSixFQUFkO0FBQ0FMLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixpQkFDV0csS0FBSyxDQUFDRSxXQUFOLEVBRFgsY0FDa0NGLEtBQUssQ0FBQ0csUUFBTixFQURsQyxjQUNzREgsS0FBSyxDQUFDSSxPQUFOLEVBRHREO0FBR0FULEVBQUFBLElBQUk7QUFDTCxDQU5EOztBQVFBLElBQU1VLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQ1osR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDekMsTUFBTVcsUUFBUSxHQUFHYixHQUFHLENBQUNhLFFBQXJCLENBRHlDLENBRXpDOztBQUNBLE1BQUlBLFFBQVEsS0FBSyxPQUFqQixFQUEwQjtBQUN4QlYsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNELEdBRkQsTUFFTztBQUNMRCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaO0FBQ0Q7O0FBQ0RGLEVBQUFBLElBQUk7QUFDTCxDQVREOztBQVdBLElBQU1ZLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUNkLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3ZDLE1BQU1hLEdBQUcsR0FBR2YsR0FBRyxDQUFDZSxHQUFoQjs7QUFDQSxNQUFJQSxHQUFHLEtBQUssWUFBWixFQUEwQjtBQUN4QixXQUFPZCxHQUFHLENBQUNlLElBQUosQ0FBUyx3QkFBVCxDQUFQO0FBQ0Q7O0FBQ0RkLEVBQUFBLElBQUk7QUFDTCxDQU5ELEMsQ0FRQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsSUFBTWUsSUFBSSxHQUFHLFNBQVBBLElBQU8sQ0FBQ2pCLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ2UsSUFBSixDQUFTLGVBQVQsQ0FBZDtBQUFBLENBQWI7O0FBQ0EsSUFBTUUsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQ2xCLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ2UsSUFBSixDQUFTLG9CQUFULENBQWQ7QUFBQSxDQUFoQjs7QUFFQWxCLEdBQUcsQ0FBQ3FCLEdBQUosQ0FBUXBCLFNBQVIsRUFBbUJPLFVBQW5CLEVBQStCTSxjQUEvQixFQUErQ0UsWUFBL0M7QUFDQWhCLEdBQUcsQ0FBQ3NCLEdBQUosQ0FBUSxHQUFSLEVBQWFILElBQWI7QUFDQW5CLEdBQUcsQ0FBQ3NCLEdBQUosQ0FBUSxZQUFSLEVBQXNCRixPQUF0QixFLENBRUE7QUFDQTs7QUFDQSxJQUFNRyxJQUFJLEdBQUcsSUFBYjtBQUNBdkIsR0FBRyxDQUFDd0IsTUFBSixDQUFXRCxJQUFYLEVBQWlCO0FBQUE7QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGppbGVlL0Rlc2t0b3AvaGovZnVsbC95b3V0dWJlX2Nsb25lL2NoYWxsZW5nZXMvMy9hMDNibHVlcHJpbnQvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5jb25zdCB1cmxMb2dnZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc29sZS5sb2coYFBhdGg6ICR7cmVxLnBhdGh9YCk7XG4gIG5leHQoKTtcbn07XG5cbmNvbnN0IHRpbWVMb2dnZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICBjb25zb2xlLmxvZyhcbiAgICBgVGltZTogJHt0b2RheS5nZXRGdWxsWWVhcigpfS4ke3RvZGF5LmdldE1vbnRoKCl9LiR7dG9kYXkuZ2V0RGF0ZSgpfWBcbiAgKTtcbiAgbmV4dCgpO1xufTtcblxuY29uc3Qgc2VjdXJpdHlMb2dnZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc3QgcHJvdG9jb2wgPSByZXEucHJvdG9jb2w7XG4gIC8vY29uc29sZS5sb2cocHJvdG9jb2wpO1xuICBpZiAocHJvdG9jb2wgPT09IFwiaHR0cHNcIikge1xuICAgIGNvbnNvbGUubG9nKFwiU2VjdXJlXCIpO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKFwiSW5zZWN1cmVcIik7XG4gIH1cbiAgbmV4dCgpO1xufTtcblxuY29uc3QgcHJvdGVjdG9yTWlkID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHVybCA9IHJlcS51cmw7XG4gIGlmICh1cmwgPT09IFwiL3Byb3RlY3RlZFwiKSB7XG4gICAgcmV0dXJuIHJlcy5zZW5kKFwiPGgxPkNhbm5vdCBBY2Nlc3M8L2gxPlwiKTtcbiAgfVxuICBuZXh0KCk7XG59O1xuXG4vL2FwcC51c2UodXJsTG9nZ2VyKTtcbi8vYXBwLnVzZSh0aW1lTG9nZ2VyKTtcbi8vYXBwLnVzZShzZWN1cml0eUxvZ2dlcik7XG4vL2FwcC51c2UocHJvdGVjdG9yTWlkKTtcblxuY29uc3QgaG9tZSA9IChyZXEsIHJlcykgPT4gcmVzLnNlbmQoXCI8aDE+SG9tZTwvaDE+XCIpO1xuY29uc3QgcHJvdGVjdCA9IChyZXEsIHJlcykgPT4gcmVzLnNlbmQoXCI8aDE+UHJvdGVjdGVkPC9oMT5cIik7XG5cbmFwcC51c2UodXJsTG9nZ2VyLCB0aW1lTG9nZ2VyLCBzZWN1cml0eUxvZ2dlciwgcHJvdGVjdG9yTWlkKTtcbmFwcC5nZXQoXCIvXCIsIGhvbWUpO1xuYXBwLmdldChcIi9wcm90ZWN0ZWRcIiwgcHJvdGVjdCk7XG5cbi8vIENvZGVzYW5kYm94IGdpdmVzIHVzIGEgUE9SVCA6KVxuLy9hcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQsICgpID0+IGBMaXN0ZW5pbmch4pyFYCk7XG5jb25zdCBQT1JUID0gNDUwMDtcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4gYExpc3RlbmluZyHinIVgKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "urlLogger",
        "req",
        "res",
        "next",
        "console",
        "log",
        "path",
        "timeLogger",
        "today",
        "Date",
        "getFullYear",
        "getMonth",
        "getDate",
        "securityLogger",
        "protocol",
        "protectorMid",
        "url",
        "send",
        "home",
        "protect",
        "use",
        "get",
        "PORT",
        "listen"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpCC,EAAAA,OAAO,CAACC,GAAR,iBAAqBJ,GAAG,CAACK,IAAzB;AACAH,EAAAA,IAAI;AACL,CAHD;;AAKA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACN,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAMK,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACAL,EAAAA,OAAO,CAACC,GAAR,iBACWG,KAAK,CAACE,WAAN,EADX,cACkCF,KAAK,CAACG,QAAN,EADlC,cACsDH,KAAK,CAACI,OAAN,EADtD;AAGAT,EAAAA,IAAI;AACL,CAND;;AAQA,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAMW,QAAQ,GAAGb,GAAG,CAACa,QAArB,CADyC,CAEzC;;AACA,MAAIA,QAAQ,KAAK,OAAjB,EAA0B;AACxBV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AACDF,EAAAA,IAAI;AACL,CATD;;AAWA,IAAMY,YAAY,GAAG,SAAfA,YAAe,CAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMa,GAAG,GAAGf,GAAG,CAACe,GAAhB;;AACA,MAAIA,GAAG,KAAK,YAAZ,EAA0B;AACxB,WAAOd,GAAG,CAACe,IAAJ,CAAS,wBAAT,CAAP;AACD;;AACDd,EAAAA,IAAI;AACL,CAND,C,CAQA;AACA;AACA;AACA;;;AAEA,IAAMe,IAAI,GAAG,SAAPA,IAAO,CAACjB,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACe,IAAJ,CAAS,eAAT,CAAd;AAAA,CAAb;;AACA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAClB,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACe,IAAJ,CAAS,oBAAT,CAAd;AAAA,CAAhB;;AAEAlB,GAAG,CAACqB,GAAJ,CAAQpB,SAAR,EAAmBO,UAAnB,EAA+BM,cAA/B,EAA+CE,YAA/C;AACAhB,GAAG,CAACsB,GAAJ,CAAQ,GAAR,EAAaH,IAAb;AACAnB,GAAG,CAACsB,GAAJ,CAAQ,YAAR,EAAsBF,OAAtB,E,CAEA;AACA;;AACA,IAAMG,IAAI,GAAG,IAAb;AACAvB,GAAG,CAACwB,MAAJ,CAAWD,IAAX,EAAiB;AAAA;AAAA,CAAjB",
      "sourceRoot": "/Users/hjilee/Desktop/hj/full/youtube_clone/challenges/3/a03blueprint/src",
      "sourcesContent": [
        "import express from \"express\";\n\nconst app = express();\n\nconst urlLogger = (req, res, next) => {\n  console.log(`Path: ${req.path}`);\n  next();\n};\n\nconst timeLogger = (req, res, next) => {\n  const today = new Date();\n  console.log(\n    `Time: ${today.getFullYear()}.${today.getMonth()}.${today.getDate()}`\n  );\n  next();\n};\n\nconst securityLogger = (req, res, next) => {\n  const protocol = req.protocol;\n  //console.log(protocol);\n  if (protocol === \"https\") {\n    console.log(\"Secure\");\n  } else {\n    console.log(\"Insecure\");\n  }\n  next();\n};\n\nconst protectorMid = (req, res, next) => {\n  const url = req.url;\n  if (url === \"/protected\") {\n    return res.send(\"<h1>Cannot Access</h1>\");\n  }\n  next();\n};\n\n//app.use(urlLogger);\n//app.use(timeLogger);\n//app.use(securityLogger);\n//app.use(protectorMid);\n\nconst home = (req, res) => res.send(\"<h1>Home</h1>\");\nconst protect = (req, res) => res.send(\"<h1>Protected</h1>\");\n\napp.use(urlLogger, timeLogger, securityLogger, protectorMid);\napp.get(\"/\", home);\napp.get(\"/protected\", protect);\n\n// Codesandbox gives us a PORT :)\n//app.listen(process.env.PORT, () => `Listening!✅`);\nconst PORT = 4500;\napp.listen(PORT, () => `Listening!✅`);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1666738358394
  }
}